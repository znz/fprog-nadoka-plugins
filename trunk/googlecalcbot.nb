# -*-ruby-*- vim:set filetype=ruby:
#
# Copyright (c) 2005 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's license.
#
# $Id$
#

=begin

== Abstract

Google Calc bot.

== Configuration

  BotConfig << {
    :name => :GoogleCalcBot,
    :bot_name => "google calc",
    :ch => //,
    :separator => /[\s<:>]/,
  }

=end

require 'cgi'
require 'nkf'
require 'open-uri'

class GoogleCalcBot < Nadoka::NDK_Bot
  def bot_initialize
    if @bot_config.key?(:channels)
      channels = '\A(?:' + @bot_config[:channels].collect{|ch|
        Regexp.quote(ch)
      }.join('|') + ')\z'
      @available_channel = Regexp.compile(channels)
    else
      @available_channel = @bot_config[:ch] || //
    end

    @bot_name = @bot_config[:bot_name] || 'google calc'
    @separator = @bot_config[:separator] || /[<:>]/
    @pattern = /^(?:google[ :])?calc\s*#{@separator}\s*(.+)/
  end

  def on_privmsg prefix, ch, msg
    return unless @available_channel === ch

    if @pattern =~ msg
      res = google_calc(NKF.nkf('-w', $1))
      send_notice(ch, "#{@bot_name}> #{res}")
    end
  end

  def google_calc exp
    @logger.slog("google_calc<#{exp.dump}")
    uri = "http://www.google.co.jp/search?ie=UTF8&oe=UTF-8&q=#{CGI.escape(exp)}"
    html = open(uri) do |f|
      f.read
    end
    if /class=r [^<>]+><b>(.+?)<\/b>/u =~ html
      result = $1
      @logger.slog("google_calc>#{result.dump}")
      result.gsub!(/<sup>(.+?)<\/sup>/u) { "^(#{$1})" }
      result.gsub!(/<.+?>/u, '')
      result.gsub!(/&\#215;/u, "\303\227")
      NKF.nkf('-j', result)
    elsif /<p class=g>.*?<a href="(.+?)">(.+?)<\/a>/u =~ html
      href, text = $1, $2
      @logger.slog("google_calc fallback>#{href.dump} #{text.dump}")
      NKF.nkf('-j', "(normal search result only)")
      #text.gsub!(/<.+?>/u, '')
      #NKF.nkf('-j', "(fallback) normal search result: #{text} #{href}")
    else
      "response error"
    end
  rescue Exception
    $!.to_s
  end
end
