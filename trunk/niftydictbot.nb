# -*-ruby-*- vim:set filetype=ruby:
#
# Copyright (c) 2005 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's license.
#
# $Id$
#

=begin

== Abstract

Reply @nifty dictionary URI.

== Configuration

  BotConfig << {
    :name => :NiftyDictBot,
    :bot_name => "nifty dict",
    :ch => //,
    :separator => /[\s<:>]/,
  }

=end

require 'cgi'
require 'nkf'

class NiftyDictBot < Nadoka::NDK_Bot
  def bot_initialize
    if @bot_config.key?(:channels)
      channels = '\A(?:' + @bot_config[:channels].collect{|ch|
        Regexp.quote(ch)
      }.join('|') + ')\z'
      @available_channel = Regexp.compile(channels)
    else
      @available_channel = @bot_config[:ch] || //
    end

    @bot_name = @bot_config[:bot_name] || 'nifty dict'
    @separator = @bot_config[:separator] || /[<:>]/
    @pattern = /^dict\s+(ej|je|[jd])?\s*#{@separator}\s*(.+)/
  end

  def on_privmsg prefix, ch, msg
    return unless @available_channel === ch

    if @pattern =~ msg
      res = nifty_dict(NKF.nkf('-s', $2), $1)
      send_notice(ch, res)
    end
  end

  NIFTY_DICT_BOOK = {
    'ej' => 0,
    'je' => 1,
    'j' => 2,
    nil => 2, # default
  }

  def nifty_dict word, book
    if book == 'd'
      return nifty_digital(word)
    elsif book = NIFTY_DICT_BOOK[book]
      word = CGI.escape(word)
      "#{@bot_name}> http://www.nifty.com/oyakudachi/webapp/dictionary?book=#{book}&word=#{word}&encode=Windows-31J"
    else
      "#{@bot_name}> unknown book: #{book}"
    end
  end

  def nifty_digital word
    word = CGI.escape(word)
    "#{@bot_name}> http://www.nifty.com/webapp/dic_search?inputword=#{word}"
  end
end
