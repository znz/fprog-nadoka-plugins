# -*-ruby; coding: cp932 -*- vim:set filetype=ruby:
#
# Copyright (c) 2006 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's license.
#
# $Id$
#

require 'open-uri'
require 'time'
require 'nkf'

module CheckMononokeAntenna
  def check_mononoke_antenna
    now = Time.now
    return if @said_hour == now.hour
    open('http://rryu.sakura.ne.jp/hakaba/diary-list.html') do |f|
      f.each_line do |line|
        case NKF.nkf('--oc=cp932 -Xm0', line)
        when /<\/div/s
          break
        when /<a href="(.+?)" target="diary-content">(.+?)</s
          say("mononoke antenna: #{$2} - #{$1}")
        when /<p class="date">([\d\- :]+)/s
          if Time.parse($1).hour == now.hour
            @said_hour = now.hour
          else
            # before update
            break
          end
        end 
      end
    end
  end
end

if __FILE__ == $0
  def say(msg)
    puts NKF.nkf("-wXm0", msg)
  end
  include CheckMononokeAntenna
  check_mononoke_antenna
  exit
end

class MononokeAntenna < Nadoka::NDK_Bot
  include CheckMononokeAntenna

  def bot_initialize
    if @bot_config.key?(:channels)
      @channels = @bot_config[:channels].collect do |ch|
        ch = @config.canonical_channel_name(ch)
      end
    else
      @channels = nil
    end
    @nkf_options = @bot_config.fetch(:nkf, "-Sj -m0")

    @said_hour = Time.now.hour
  end


  def on_timer tm
    return unless @channels
    check_mononoke_antenna
  end

  def say(msg)
    @channels.each{|ch|
      send_notice(ch, NKF.nkf(@nkf_options, msg))
    }
  end
end
