# -*-ruby-*-
#
# Copyright (c) 2009, 2010, 2011, 2012 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's license.
#

=begin

== Abstract

Reply number of upgradable packages.

== Configuration

This bot depends "apt-show-versions" package.

  BotConfig << {
    :name => :Upgradable,
    :bot_name => "upgradable",
    :ch => //,
    :pattern => /\Aupgradable\z/,
    :delay => 0.1,
  }

=end

require "enumerator"

class Upgradable < Nadoka::NDK_Bot
  def bot_initialize
    if @bot_config.key?(:channels)
      channels = '\A(?:' + @bot_config[:channels].collect{|ch|
        Regexp.quote(ch)
      }.join('|') + ')\z'
      @available_channel = Regexp.compile(channels)
    else
      @available_channel = @bot_config.fetch(:ch, //)
    end

    @bot_name = @bot_config.fetch(:bot_name, 'upgradable')
    @pattern = @bot_config.fetch(:pattern, /\Aupgradable\z/)
    @delay = @bot_config.fetch(:delay, nil)
  end

  def on_privmsg prefix, ch, msg
    return unless @available_channel === ch

    if @pattern === msg
      Thread.start do
        begin
          sleep @delay if @delay
          send_notice(ch, "#{@bot_name}: #{reply}")
        rescue Exception
          send_notice(ch, "#{@bot_name}: error #{$!.inspect}")
        end
      end
    end
  end

  def reply
    upgradable = `aptitude search '~U' -F '%p'`.split
    case upgradable.size
    when 0
      "no packages"
    when 1
      "#{upgradable.size} package: #{upgradable[0]}"
    else
      "#{upgradable.size} packages: #{upgradable.join(',')}"
    end
  end
end
