# -*-ruby-*-
#
# Copyright (c) 2009, 2010 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's license.
#
# $Id$
#

=begin

== Abstract

Reply a first line of file.

== Configuration

  BotConfig << {
    :name => :CatBot,
    :ch => //,
    :pattern => /\Ausbrh\z/,
    :file => "/proc/usbrh/0/status",
  }

  BotConfig << {
    :name => :CatBot,
    :ch => //,
    :pattern => /\Auptime\z/,
    :file => "|uptime",
    :delay => 0.1,
  }

=end

class CatBot < Nadoka::NDK_Bot
  def bot_initialize
    if @bot_config.key?(:channels)
      channels = '\A(?:' + @bot_config[:channels].collect{|ch|
        Regexp.quote(ch)
      }.join('|') + ')\z'
      @available_channel = Regexp.compile(channels)
    else
      @available_channel = @bot_config[:ch] || //
    end

    @pattern = @bot_config[:pattern] || /\Acat\z/
    @file = @bot_config[:file] || "/etc/motd"
    @delay = @bot_config.fetch(:delay, nil)
  end

  def on_privmsg prefix, ch, msg
    return unless @available_channel === ch

    if @pattern === msg
      line = open(@file){|f| f.gets }
      if line
        send_notice_with_delay(ch, line.chomp)
      end
    end
  end

  def send_notice_with_delay(ch, msg)
    if @delay
      Thread.start do
        sleep @delay
        send_notice(ch, msg)
      end
    else
      send_notice(ch, msg)
    end
  end
end
