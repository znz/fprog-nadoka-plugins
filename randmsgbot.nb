# -*-ruby-*- vim:set filetype=ruby:
#
# Copyright (c) 2004-2005 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's lisence.
#
# $Id$
#

=begin

== Abstract

Reply random messages.

== Configuration

  BotConfig << {
   :name => :RandMsgBot,
   :bot_name => "fortune bot",
   :ch => /nadoka/,
   :keyword => /おみくじ/e,
   :msgfile => File.expand_path("fortune.yaml", File.dirname(__FILE__)),
  }

== msgfile

msgfileはdataの中に表示用文字列がキーで重みが値のハッシュを入れたYAML::Store

例:
  --- 
  data:
    "テスト": 1.0

=end

require 'nkf'
require 'yaml/store'

class RandMsgBot < Nadoka::NDK_Bot
  def bot_initialize
    raise "not found msgfile" unless File.exist?(@bot_config[:msgfile])
    @db = YAML::Store.new(@bot_config[:msgfile])

    if @bot_config.key?(:channels)
      channels = '\A(?:' + @bot_config[:channels].collect{|ch|
        Regexp.quote(ch)
      }.join('|') + ')\z'
      @available_channel = Regexp.compile(channels)
    else
      @available_channel = @bot_config[:ch] || //
    end

    @bot_name = @bot_config[:bot_name] || 'RandMsgBot'
  end

  def randmsg
    data = nil
    @db.transaction do |db|
      data = db['data']
    end
    selected = nil
    total = 0
    data.each do |name, weight|
      selected = name if rand * (total += weight) < weight
    end
    selected
  end

  def on_privmsg prefix, ch, msg
    return unless @available_channel === ch

    if @bot_config[:keyword] =~ NKF.nkf("-e", msg.to_s)
      send_notice(ch, NKF.nkf("-Ej -m0", "#{@bot_name}: #{randmsg}"))
    end
  end
end
