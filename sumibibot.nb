# -*-ruby-*- vim:set filetype=ruby:
#
# Copyright (c) 2004-2005 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's lisence.
#
# $Id$
#

=begin

== Abstract

sumibi client

see http://sourceforge.jp/projects/sumibi/

== Configuration

  BotConfig << {
    :name => :SumibiBot,
    :bot_name => 'sumibi',
    :ch => /nadoka/,
    :separator => /[\s<:>]/,
  }

=end

require 'nkf'
require 'soap/wsdlDriver'

class SumibiBot < Nadoka::NDK_Bot
  SUMIBI_SERVER_CERT_DATA = <<-CERT
-----BEGIN CERTIFICATE-----
MIIC5zCCAlACAQEwDQYJKoZIhvcNAQEFBQAwgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0
IFZhbGlkYXRpb24gTmV0d29yazEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAz
BgNVBAsTLFZhbGlDZXJ0IENsYXNzIDIgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9y
aXR5MSEwHwYDVQQDExhodHRwOi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG
9w0BCQEWEWluZm9AdmFsaWNlcnQuY29tMB4XDTk5MDYyNjAwMTk1NFoXDTE5MDYy
NjAwMTk1NFowgbsxJDAiBgNVBAcTG1ZhbGlDZXJ0IFZhbGlkYXRpb24gTmV0d29y
azEXMBUGA1UEChMOVmFsaUNlcnQsIEluYy4xNTAzBgNVBAsTLFZhbGlDZXJ0IENs
YXNzIDIgUG9saWN5IFZhbGlkYXRpb24gQXV0aG9yaXR5MSEwHwYDVQQDExhodHRw
Oi8vd3d3LnZhbGljZXJ0LmNvbS8xIDAeBgkqhkiG9w0BCQEWEWluZm9AdmFsaWNl
cnQuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDOOnHK5avIWZJV16vY
dA757tn2VUdZZUcOBVXc65g2PFxTXdMwzzjsvUGJ7SVCCSRrCl6zfN1SLUzm1NZ9
WlmpZdRJEy0kTRxQb7XBhVQ7/nHk01xC+YDgkRoKWzk2Z/M/VXwbP7RfZHM047QS
v4dk+NoS/zcnwbNDu+97bi5p9wIDAQABMA0GCSqGSIb3DQEBBQUAA4GBADt/UG9v
UJSZSWI4OB9L+KXIPqeCgfYrx+jFzug6EILLGACOTb2oWH+heQC1u+mNr0HZDzTu
IYEZoDJJKPTEjlbVUjP9UNV+mWwD5MlM/Mtsq2azSiGM5bUMMj4QssxsodyamEwC
W/POuZ6lcg5Ktz885hZo+L7tdEy8W9ViH0Pd
-----END CERTIFICATE-----
  CERT

  def bot_initialize
    if @bot_config.key?(:channels)
      channels = '\A(?:' + @bot_config[:channels].collect{|ch|
        Regexp.quote(ch)
      }.join('|') + ')\z'
      @available_channel = Regexp.compile(channels)
    else
      @available_channel = @bot_config[:ch] || //
    end

    @bot_name = @bot_config[:bot_name] || 'sumibi'
    @separator = @bot_config[:separator] || /[<:>]/
    @pattern = /^#{Regexp.quote(@bot_name)}\s*#{@separator}\s*(.+)/

    wsdl = 'http://sumibi.org/sumibi/Sumibi_stable.wsdl'
    @sumibi = SOAP::WSDLDriverFactory.new(wsdl).create_rpc_driver
    status = @sumibi.getStatus
    @logger.slog "#{@bot_name}: sumibi server version #{status.version}"
    @sumi, = status.sumi
  rescue
    @logger.slog NKF.nkf('-j -m0', "#{@bot_name}: #{$!}")
    @manager.ndk_error $!
  end

  def on_privmsg prefix, ch, msg
    return unless @available_channel === ch

    if @pattern === msg
      yomi = $1
      @logger.slog("#{@bot_name}<#{yomi}")
      yomi = NKF.nkf("-w -m0", yomi)
      result = @sumibi.doSumibiConvert(yomi, @sumi, 'utf-8', 'utf-8')
      @logger.slog("#{@bot_name}>result.convertTime=#{result.convertTime}")
      r = []
      result.resultElements.each do |e|
        if e.candidate.zero?
          r[e.no] = e.word
        end
      end
      send_notice(ch, NKF.nkf('-j -m0', "#{@bot_name}: #{r.join(' ')}"))
    end
  rescue
    send_notice(ch, NKF.nkf("-j -m0", "#{@bot_name}: #{$!}"))
    @manager.ndk_error $!
  end
end
