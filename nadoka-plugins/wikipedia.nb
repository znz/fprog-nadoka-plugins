# -*-ruby-*- vim:set filetype=ruby:
#
# Copyright (c) 2005 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's lisence.
#
#
# $Id: /testproject/local/nadoka-plugins/hourlybot.nb 630 2005-06-05T00:36:52.852678Z kazu  $
#
=begin

== Abstract

Reply Wikipedia URI.

== Configuration
=== for nadoka 0.6.x or earlier

  BotConfig = {
    :Wikipedia => {
      :ch => //,
    },
  }

=== for nadoka 0.7.0 or later

  BotConfig << {
    :name => :Wikipedia,
    :ch => //,
    :default_lang => 'ja',
    :separator => /[\s<:>]/,
    :l_wikis => {
      'wp' => '.wikipedia.org',
      'wt' => '.wiktionary.org',
      'wikt' => '.wiktionary.org',
      'wq' => '.wikiquote.org',
      'wb' => '.wikibooks.org',
    },
    :wikis => {
      'wm' => 'meta.wikimedia.org',
      'wc' => 'commons.wikimedia.org',
      'commons' => 'commons.wikimedia.org',
      'ws' => 'wikisource.org',
      'wsp' => 'species.wikipedia.org',
    },
  }

=end

require 'cgi'
require 'nkf'
require 'open-uri'
require 'rexml/document'

class Wikipedia < Nadoka::NDK_Bot
  def bot_initialize
    @available_channel = @bot_config[:ch] || //
    @default_lang = @bot_config[:default_lang] || 'ja'
    @separator = @bot_config[:separator] || /[<:>]/
    @l_wikis = {
      'wikipedia' => '.wikipedia.org',
      'wiktionary' => '.wiktionary.org',
      'wikiquote' => '.wikiquote.org',
      'wikibooks' => '.wikibooks.org',
    }.update(@bot_config[:l_wikis])
    @wikis = {
      'wikimedia' => 'meta.wikimedia.org',
      'wikicommons' => 'commons.wikimedia.org',
      'wikisource' => 'wikisource.org',
      'wikisources' => 'wikisource.org',
      'wikispecie' => 'species.wikipedia.org',
      'wikispecies' => 'species.wikipedia.org',
    }.update(@bot_config[:wikis])
    @l_pattern = /^(#{@l_wikis.keys.join('|')})(?::([a-z]{2}))?\s*#{@separator}\s*(.+)/
    @pattern = /^(#{@wikis.keys.join('|')})\s*#{@separator}\s*(.+)/
  end

  def on_privmsg prefix, ch, msg
    return unless @available_channel === ch

    case msg
    when @l_pattern
      host = "#{$2 || @default_lang}#{@l_wikis[$1]}"
      res = wikipedia(NKF.nkf('-w', $3), host)
      send_notice(ch, res)
    when @pattern
      res = wikipedia(NKF.nkf('-w', $2), @wikis[$1])
      send_notice(ch, res)
    end
  end

  def wikipedia word, host='en.wikipedia.org'
    word = CGI.escape(word)
    uri = "http://#{host}/wiki/#{word}"
    export_uri = "http://#{host}/wiki/Special:Export/#{word}"
    io = open(export_uri)
    doc = REXML::Document.new(io)
    title = doc.elements["/mediawiki/page/title/text()"]
    unless title
      return "wikipedia bot> not found: #{uri}"
    end
    text = doc.elements["/mediawiki/page/revision/text/text()"]
    if text
      text = text.to_s.gsub(/\s+/u, ' ').sub(/\A(.{47})....+/u, '\1...')
      text = NKF.nkf('-Wj', "- #{text}")
    else
      text = "(text not found)"
    end
    NKF.nkf('-Wj', "wikipedia bot> #{title}: #{uri} #{text}")
  end
end
