# -*-ruby-*- vim:set filetype=ruby:
#
# Copyright (c) 2004-2005 Kazuhiro NISHIYAMA
#
# This program is free software with ABSOLUTELY NO WARRANTY.
# You can re-distribute and/or modify this program under
# the same terms of the Ruby's lisence.
#
# $Id$
#

=begin

== Abstract

CSVファイルからランダムにとってきて表示する。

== Configuration

  BotConfig << {
    :name => :RandMsgBotCSV,
    :bot_name => "lunch bot",
    :ch => /lunch/,
    :csvfile => File.expand_path("lunch.csv", File.dirname(__FILE__)),
    :keyword => /昼食/e,
    :format => "%1$sで%2$sはいかが? %3$sにあります",
    },
  }

== CSVファイルの例(最初の項目は数字が大きいほど選択されやすくなる重み付け):

  2,マクドナルド,ハンバーガー,駅前
  5,コンビニ,弁当,いろんなところ
  1,たまには断食メニュー,断食,どこか

=end

require 'nkf'
require 'csv'

class RandMsgBotCSV < Nadoka::NDK_Bot
  def bot_initialize
    @bot_name = @bot_config[:bot_name] || 'RandMsgBotCSV'
    @available_channel = @bot_config[:ch] || //
    @keyword = @bot_config[:keyword] || //
    @format = @bot_config[:format] || '%s'
    load_csv
  end

  def load_csv
    @data = []
    csv = CSV.parse(@bot_config[:csvfile])
    csv.each do |weight, *rest|
      @data.push([weight.to_s.to_i, rest])
    end
  end

  def randmsg
    selected = nil
    total = 0
    @data.each do |weight, rest|
      selected = rest if rand * (total += weight) < weight
    end
    sprintf(@format, *selected)
  end

  def on_privmsg prefix, ch, msg
    return unless @available_channel === ch

    case NKF.nkf("-e", msg.to_s)
    when @keyword
      send_notice(ch, randmsg)
    when /#{Regexp.quote(@bot_name)}\s*[<:>]\s*候補数/e
      send_notice(ch, "#{@data.size}件のデータがあります。")
    when /#{Regexp.quote(@bot_name)}\s*[<:>]\s*リロード/e
      load_csv
      send_notice(ch, "#{@data.size}件のデータを読み込みました。")
    end
  end

  def send_notice(ch, msg)
    super(ch, NKF.nkf("-Ej -m0", "#{@bot_name}: #{msg}"))
  end
end

